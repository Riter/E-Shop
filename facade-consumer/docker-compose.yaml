version: '3.9'

services:

  # Kafka services
  kafka:
    image: bitnami/kafka:3.7
    container_name: kafka
    environment:
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - "9092:9092"
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server kafka:9092 --list"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 30s

  kafka-setup:
    image: bitnami/kafka:3.7
    depends_on:
      kafka:
        condition: service_healthy
    entrypoint: ["/bin/sh", "-c"]
    command: |
      "
      # Create the topic with 2 partitions
      kafka-topics.sh --bootstrap-server kafka:9092 --create --if-not-exists --topic item-events --partitions 2 --replication-factor 1
      
      # List topics to verify
      kafka-topics.sh --bootstrap-server kafka:9092 --list
      "
  redis:
    image: redis:7
    container_name: redis
    ports:
      - "16379:6379"

  app:
    build: .
    dns:
      - 8.8.8.8
      - 8.8.4.4
    container_name: go-kafka-redis-app
    environment:
      KAFKA_BROKERS: "kafka:9092"
      KAFKA_TOPIC: "item-events"
      KAFKA_GROUP_ID: "my-group"
      REDIS_ADDR: "redis:6379"
      REDIS_PASS: ""
      REDIS_DB: "0"
    depends_on:
      - kafka
      - redis
    ports:
      - "8080:8080"
